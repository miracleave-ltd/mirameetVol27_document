{"./":{"url":"./","title":"はじめに","keywords":"","body":"コストも時間も削減？！RSpec for Rails × AWS Codebuildで業務で使える 自動テストを体験しよう！ "},"Section_1.html":{"url":"Section_1.html","title":"1.本日のミートアップの内容","keywords":"","body":"本日のミートアップの内容 1.本日のゴール RSpecでできること・できないことが分かる。 現場で使えるRSpecの使い方が分かる。 RSpecを使うメリットとデメリットが分かるようになる。 2.本日お話しすること Rspecの概要解説 RSpecでの単体・結合・統合テスト > AWS CodeBuildでビルド実行する 3.本日のミートアップ対象者 RSpecの導入を検討している人 Railsで開発してるが、Rpsecを書いたことない人 Railsで開発してるが、Rpsecをこれから利用する人(開発経験2年目~5年目) 4.留意事項 xxxxx xxxxx "},"Section_2.html":{"url":"Section_2.html","title":"2.RSpecの概要解説","keywords":"","body":"RSpecの概要解説 本クションで行うこと RSpecとは何か RSpecのメリット・デメリット RSpecでできること RSpecとは？ 突然ですが、皆さんの開発現場ではテストはどのように実施されてますか？ 私が経験した現場では、いろいろなテストの形がありました。動作確認程度のテスト、エクセルでエビデンスのキャプチャをとるレガシーなテスト、テストコードを利用したテスト、、、、、など現場によって様々です。 今回はRuby on Railsでの自動テストについて話していきます。 RSpecは、Ruby on Railsのテストフレームワークになります。RSpecを使うことで、テストコードによる自動テストができるようになります。 RSpecのメリット・デメリット メリット デメリット "}}